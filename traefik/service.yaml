command:
  - "--api=true"
  - "--api.dashboard=true"
  - "--api.insecure=true"
  - "--certificatesresolvers.default.acme.email=hostmaster@$STACK_DOMAIN"
  - "--certificatesresolvers.default.acme.storage=/config/acme.json"
  - "--certificatesresolvers.default.acme.tlschallenge=true"
  - "--entrypoints.http.address=:80"
  - "--entrypoints.http.http.redirections.entryPoint.scheme=https"
  - "--entrypoints.http.http.redirections.entryPoint.to=https"
  - "--entrypoints.https.address=:443"
  - "--global.checknewversion=false"
  - "--global.sendanonymoususage=false"
  - "--providers.docker.exposedbydefault=false"
  - "--providers.docker.network=internal"
  - '--providers.docker.defaultrule=Host(`{{ with $$x := index .Labels "stack.short" }}{{ $$x }}{{ else }}{{ index .Labels "stack.service" }}{{ end }}.{{ index .Labels "stack.domain" }}`)'
extra_hosts:
  - "host.docker.internal:$STACK_HOST_IP"
labels:
  traefik.enable: true
  traefik.http.routers.traefik.tls.certresolver: default
  traefik.http.routers.traefik.middlewares: traefik-auth
  traefik.http.services.traefik.loadbalancer.server.port: 8080
networks:
  internal:
ports:
  - "80:80"
  - "443:443"
volumes:
  - type: volume
    source: config
    target: /config
  - type: bind
    source: /var/run/docker.sock
    target: /var/run/docker.sock
